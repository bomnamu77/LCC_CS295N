// <auto-generated />
using System;
using Community.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Community.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Community.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Community.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FromUserID");

                    b.Property<bool>("IsReply");

                    b.Property<int?>("MessageID1");

                    b.Property<int>("Priority");

                    b.Property<string>("Text");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int?>("ToUserID");

                    b.HasKey("MessageID");

                    b.HasIndex("FromUserID");

                    b.HasIndex("MessageID1");

                    b.HasIndex("ToUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Community.Models.People", b =>
                {
                    b.Property<int>("PeopleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.HasKey("PeopleID");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("Community.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Community.Models.Message", b =>
                {
                    b.HasOne("Community.Models.User", "From")
                        .WithMany()
                        .HasForeignKey("FromUserID");

                    b.HasOne("Community.Models.Message")
                        .WithMany("Replies")
                        .HasForeignKey("MessageID1");

                    b.HasOne("Community.Models.User", "To")
                        .WithMany()
                        .HasForeignKey("ToUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
